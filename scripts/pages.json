[{"name":"class CCARefusedException : CogRPCClient.CogRPCException","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.CCARefusedException","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/-c-c-a-refused-exception/index.html","searchKeys":["CCARefusedException","class CCARefusedException : CogRPCClient.CogRPCException","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.CCARefusedException"]},{"name":"class PrivateSubnetTrustManager : X509TrustManager","description":"tech.relaycorp.relaynet.cogrpc.client.PrivateSubnetTrustManager","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-private-subnet-trust-manager/index.html","searchKeys":["PrivateSubnetTrustManager","class PrivateSubnetTrustManager : X509TrustManager","tech.relaycorp.relaynet.cogrpc.client.PrivateSubnetTrustManager"]},{"name":"fun <ERROR CLASS>.toAck(): <ERROR CLASS>","description":"tech.relaycorp.relaynet.cogrpc.toAck","location":"cogrpc/tech.relaycorp.relaynet.cogrpc/to-ack.html","searchKeys":["toAck","fun <ERROR CLASS>.toAck(): <ERROR CLASS>","tech.relaycorp.relaynet.cogrpc.toAck"]},{"name":"fun CCARefusedException()","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.CCARefusedException.CCARefusedException","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/-c-c-a-refused-exception/-c-c-a-refused-exception.html","searchKeys":["CCARefusedException","fun CCARefusedException()","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.CCARefusedException.CCARefusedException"]},{"name":"fun CargoDeliveryRequest.toCargoDelivery(): <ERROR CLASS>","description":"tech.relaycorp.relaynet.cogrpc.toCargoDelivery","location":"cogrpc/tech.relaycorp.relaynet.cogrpc/to-cargo-delivery.html","searchKeys":["toCargoDelivery","fun CargoDeliveryRequest.toCargoDelivery(): <ERROR CLASS>","tech.relaycorp.relaynet.cogrpc.toCargoDelivery"]},{"name":"fun CogRPCException(throwable: Throwable? = null, message: String? = null)","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.CogRPCException.CogRPCException","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/-cog-r-p-c-exception/-cog-r-p-c-exception.html","searchKeys":["CogRPCException","fun CogRPCException(throwable: Throwable? = null, message: String? = null)","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.CogRPCException.CogRPCException"]},{"name":"fun InputStream.readBytesAndClose(): <ERROR CLASS>","description":"tech.relaycorp.relaynet.cogrpc.readBytesAndClose","location":"cogrpc/tech.relaycorp.relaynet.cogrpc/read-bytes-and-close.html","searchKeys":["readBytesAndClose","fun InputStream.readBytesAndClose(): <ERROR CLASS>","tech.relaycorp.relaynet.cogrpc.readBytesAndClose"]},{"name":"fun String.toCargoDeliveryAck(): <ERROR CLASS>","description":"tech.relaycorp.relaynet.cogrpc.toCargoDeliveryAck","location":"cogrpc/tech.relaycorp.relaynet.cogrpc/to-cargo-delivery-ack.html","searchKeys":["toCargoDeliveryAck","fun String.toCargoDeliveryAck(): <ERROR CLASS>","tech.relaycorp.relaynet.cogrpc.toCargoDeliveryAck"]},{"name":"fun build(serverAddress: String, channelBuilderProvider: ChannelBuilderProvider<*>, requireTls: Boolean = true): CogRPCClient","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.Builder.build","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/-builder/build.html","searchKeys":["build","fun build(serverAddress: String, channelBuilderProvider: ChannelBuilderProvider<*>, requireTls: Boolean = true): CogRPCClient","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.Builder.build"]},{"name":"fun close()","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.close","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/close.html","searchKeys":["close","fun close()","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.close"]},{"name":"fun collectCargo(cca: () -> InputStream): Flow<InputStream>","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.collectCargo","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/collect-cargo.html","searchKeys":["collectCargo","fun collectCargo(cca: () -> InputStream): Flow<InputStream>","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.collectCargo"]},{"name":"fun deliverCargo(cargoes: Iterable<CargoDeliveryRequest>): Flow<String>","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.deliverCargo","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/deliver-cargo.html","searchKeys":["deliverCargo","fun deliverCargo(cargoes: Iterable<CargoDeliveryRequest>): Flow<String>","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.deliverCargo"]},{"name":"fun getCCASerialized(metadata: Metadata): ByteArray?","description":"tech.relaycorp.relaynet.cogrpc.AuthorizationMetadata.getCCASerialized","location":"cogrpc/tech.relaycorp.relaynet.cogrpc/-authorization-metadata/get-c-c-a-serialized.html","searchKeys":["getCCASerialized","fun getCCASerialized(metadata: Metadata): ByteArray?","tech.relaycorp.relaynet.cogrpc.AuthorizationMetadata.getCCASerialized"]},{"name":"fun makeMetadata(ccaSerialized: ByteArray): <ERROR CLASS>","description":"tech.relaycorp.relaynet.cogrpc.AuthorizationMetadata.makeMetadata","location":"cogrpc/tech.relaycorp.relaynet.cogrpc/-authorization-metadata/make-metadata.html","searchKeys":["makeMetadata","fun makeMetadata(ccaSerialized: ByteArray): <ERROR CLASS>","tech.relaycorp.relaynet.cogrpc.AuthorizationMetadata.makeMetadata"]},{"name":"object AuthorizationMetadata","description":"tech.relaycorp.relaynet.cogrpc.AuthorizationMetadata","location":"cogrpc/tech.relaycorp.relaynet.cogrpc/-authorization-metadata/index.html","searchKeys":["AuthorizationMetadata","object AuthorizationMetadata","tech.relaycorp.relaynet.cogrpc.AuthorizationMetadata"]},{"name":"object Builder","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.Builder","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/-builder/index.html","searchKeys":["Builder","object Builder","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.Builder"]},{"name":"object Companion","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.Companion","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/-companion/index.html","searchKeys":["Companion","object Companion","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.Companion"]},{"name":"object Companion","description":"tech.relaycorp.relaynet.cogrpc.client.PrivateSubnetTrustManager.Companion","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-private-subnet-trust-manager/-companion/index.html","searchKeys":["Companion","object Companion","tech.relaycorp.relaynet.cogrpc.client.PrivateSubnetTrustManager.Companion"]},{"name":"open class CogRPCClient","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/index.html","searchKeys":["CogRPCClient","open class CogRPCClient","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient"]},{"name":"open class CogRPCException(throwable: Throwable? = null, message: String? = null) : Exception","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.CogRPCException","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/-cog-r-p-c-exception/index.html","searchKeys":["CogRPCException","open class CogRPCException(throwable: Throwable? = null, message: String? = null) : Exception","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.CogRPCException"]},{"name":"open override fun checkClientTrusted(chain: Array<out X509Certificate>?, authType: String?)","description":"tech.relaycorp.relaynet.cogrpc.client.PrivateSubnetTrustManager.checkClientTrusted","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-private-subnet-trust-manager/check-client-trusted.html","searchKeys":["checkClientTrusted","open override fun checkClientTrusted(chain: Array<out X509Certificate>?, authType: String?)","tech.relaycorp.relaynet.cogrpc.client.PrivateSubnetTrustManager.checkClientTrusted"]},{"name":"open override fun checkServerTrusted(chain: Array<out X509Certificate>?, authType: String?)","description":"tech.relaycorp.relaynet.cogrpc.client.PrivateSubnetTrustManager.checkServerTrusted","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-private-subnet-trust-manager/check-server-trusted.html","searchKeys":["checkServerTrusted","open override fun checkServerTrusted(chain: Array<out X509Certificate>?, authType: String?)","tech.relaycorp.relaynet.cogrpc.client.PrivateSubnetTrustManager.checkServerTrusted"]},{"name":"open override fun getAcceptedIssuers(): Array<X509Certificate>","description":"tech.relaycorp.relaynet.cogrpc.client.PrivateSubnetTrustManager.getAcceptedIssuers","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-private-subnet-trust-manager/get-accepted-issuers.html","searchKeys":["getAcceptedIssuers","open override fun getAcceptedIssuers(): Array<X509Certificate>","tech.relaycorp.relaynet.cogrpc.client.PrivateSubnetTrustManager.getAcceptedIssuers"]},{"name":"val INSTANCE: PrivateSubnetTrustManager","description":"tech.relaycorp.relaynet.cogrpc.client.PrivateSubnetTrustManager.Companion.INSTANCE","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-private-subnet-trust-manager/-companion/-i-n-s-t-a-n-c-e.html","searchKeys":["INSTANCE","val INSTANCE: PrivateSubnetTrustManager","tech.relaycorp.relaynet.cogrpc.client.PrivateSubnetTrustManager.Companion.INSTANCE"]},{"name":"val channelBuilderProvider: ChannelBuilderProvider<*>","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.channelBuilderProvider","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/channel-builder-provider.html","searchKeys":["channelBuilderProvider","val channelBuilderProvider: ChannelBuilderProvider<*>","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.channelBuilderProvider"]},{"name":"val requireTls: Boolean","description":"tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.requireTls","location":"cogrpc/tech.relaycorp.relaynet.cogrpc.client/-cog-r-p-c-client/require-tls.html","searchKeys":["requireTls","val requireTls: Boolean","tech.relaycorp.relaynet.cogrpc.client.CogRPCClient.requireTls"]}]
